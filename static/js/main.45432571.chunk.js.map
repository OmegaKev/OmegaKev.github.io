{"version":3,"sources":["assets/images/kh_picture.jpg","logo.svg","ComponentToolbox.js","web_pages/About.js","assets/documents/KHallResume.pdf","web_pages/Resume.js","web_pages/Contact.js","web_pages/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["Header","text","className","skills","platforms","tools","BulletList","list","bl_list","forEach","item","index","push","ShowBulletList","d_list","header","ShowSkills","ShowPlatforms","ShowTools","Page_About","Page_Resume","console","log","data","pdf_resume","type","InputText","props","getInputValue","ref_state","value","getErrorState","state","error","setErrorState","bool_state","style","backgroundColor","setState","validateInput","regex","test","render","onChange","handleChange","required","undefined","React","Component","Page_Contact","useState","email","setEmail","subject","setSubject","message","setMessage","ref_email","useRef","email_regex","event","state_func","current","target","sendMail","values","a","requestOptions","method","headers","body","JSON","stringify","fetch","res","status","alert","onSubmit","preventDefault","_replyto","_subject","_message","ref","RepoElement","repo","open","size","repoBody","setRepoBody","animation_interval","setSize","useCallback","new_value","Math","max","min","setOpenState","alterRepoBody","speed","clearInterval","useEffect","setInterval","onClick","name","git_url","description","RepoList","repos","length","map","id","Page_Projects","RepoLoading","isLoading","loading","appState","setAppState","then","json","Button","handleClick","Page_UnderConstruction","src","logo","alt","MainPageContent","default","page_state","page","new_page","this","Page","SideBySideLayout","mpRef","proImage","changePage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.45432571.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/kh_picture.c70fdebd.jpg\";","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const Header = ({text}) => {\r\n    return (\r\n      <div className = \"header_name\">\r\n        <span>{text}</span>\r\n      </div>\r\n    );\r\n  }","const skills = ['C++', 'C#', 'Java', 'JavaScript', 'Python', 'SQL', 'XHTML/HTML5', 'CSS'];\r\nconst platforms = ['Windows', 'Linux', 'Android'];\r\nconst tools = ['Git', 'GitHub', 'Bitbucket', 'Bash', 'Shell', 'Visual Studio', 'Visual Studio Code', 'IntelliJ IDEA'];\r\n\r\nconst BulletList = ({list}) =>\r\n{\r\n    let bl_list = [];\r\n    list.forEach((item, index) => bl_list.push(<li key={index}>{item}</li>));\r\n\r\n    return(\r\n        <>\r\n            <ul>{bl_list}</ul>\r\n        </>\r\n    );\r\n}\r\n\r\n// Create a bullet list and display it\r\nconst ShowBulletList = ({d_list, header}) => {\r\n    return (\r\n        <>\r\n            {header}\r\n            <BulletList list = {d_list} />\r\n        </>\r\n    );\r\n}\r\n\r\n// Display the skill list\r\nconst ShowSkills = ({header}) => {\r\n    return(\r\n        <ShowBulletList d_list = {skills} header = {header} />\r\n    );\r\n}\r\n\r\n// Display the platform list\r\nconst ShowPlatforms = ({header}) => {\r\n    return(\r\n        <ShowBulletList d_list = {platforms} header = {header} />\r\n    );\r\n}\r\n\r\n// Display the tool list\r\nconst ShowTools = ({header}) => {\r\n    return(\r\n        <ShowBulletList d_list = {tools} header = {header} />\r\n    );\r\n}\r\n\r\nconst Page_About = () =>\r\n{\r\n    return (\r\n        <div>\r\n            <div className=\"text-border\">\r\n                <span>\r\n                    <h1>Summary</h1>\r\n                    <p>My name is Kevin Hall, and I have an excellent academic record at the master’s level, ability to debug software, fluent in a variety of programming languages such as C++, Java, C#, Python, JavaScript, and front-end web design experience using HTML5, and CSS.</p>\r\n                    <p>I have a strong understanding of functional designs and structures and am experienced in supporting a team in an agile work environment as a Software Engineer utilizing version control systems such as Git, and Bitbucket.</p>\r\n                    <p>My goal is to continually expand my knowledge and skillset with new technologies to advance my role in an innovative and ambitious organization.</p>\r\n                    <h1>Interests and Hobbies</h1>\r\n                    <p>In my free time, I enjoy keeping up with the occasional sci-fi show like “The Expanse”, or “Star Trek”. I spend time learning new languages and frameworks to explore new ideas and improve the developmental process of the work I am currently doing. Since COVID-19, I have taken up the occasional walk and weightlifting to improve my physical health and well-being.</p>\r\n                    <ShowSkills header = {<h1>Current Skills</h1>} />\r\n                    <ShowPlatforms header = {<h1>Platforms</h1>} />\r\n                    <ShowTools header = {<h1>Tools</h1>} />\r\n                </span>\r\n            </div>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Page_About;","export default __webpack_public_path__ + \"static/media/KHallResume.50da4452.pdf\";","import pdf_resume from '../assets/documents/KHallResume.pdf';\r\n\r\nconst Page_Resume = () =>\r\n{\r\n    console.log(\"Loading Resume...\");\r\n    return (\r\n        <div>\r\n            <object className = \"pdf-viewer\" data = {pdf_resume} type=\"application/pdf\">\r\n                <p>Resume</p>\r\n            </object>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Page_Resume;","import {useState} from 'react';\r\nimport React from 'react';\r\n\r\nclass InputText extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.type = (props.type !== undefined) ? props.type : \"text\";\r\n        this.handleChange = props.handleChange;\r\n        this.required = (props.required) ? true : false;\r\n        this.style = {backgroundColor: \"\"};\r\n        this.state = {error: false};\r\n    }\r\n\r\n    // Returns the input value attached to the parent state\r\n    getInputValue = () => {\r\n        return this.props.ref_state.value;\r\n    }\r\n\r\n    getErrorState = () => {\r\n        return this.state.error;\r\n    }\r\n\r\n    setErrorState = (bool_state) => {\r\n        if(bool_state === true)this.style = {backgroundColor: \"Pink\"};\r\n        else this.style = {backgroundColor: \"\"};\r\n\r\n        this.setState({error: bool_state});\r\n    }\r\n\r\n    validateInput = (regex) => {\r\n        // Test against the regex and place the component in the correct state\r\n        let error = !regex.test(this.getInputValue());\r\n        \r\n        if (error)this.setErrorState(true);\r\n        else this.setErrorState(false);\r\n\r\n        return error === false;\r\n    }\r\n\r\n    render = () => {\r\n        return(\r\n            <>\r\n                <input type = {this.type} \r\n                    value = {this.getInputValue()}\r\n                    onChange = {this.handleChange}\r\n                    style = {this.style}\r\n                    required = {this.required}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst Page_Contact = () =>\r\n{\r\n    const [email, setEmail] = useState('');\r\n    const [subject, setSubject] = useState('');\r\n    const [message, setMessage] = useState('');\r\n\r\n    const ref_email = React.useRef();\r\n    const email_regex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n    // Handle changes to the form\r\n    const handleChange = (event, state_func) =>\r\n    {\r\n        // Only check for errors on email\r\n        if(state_func === setEmail && ref_email.current.getErrorState())\r\n        {\r\n            ref_email.current.validateInput(email_regex);\r\n        }\r\n        \r\n        // Chage the value of the component\r\n        state_func(event.target.value);\r\n    }\r\n\r\n    const sendMail = async (values) => {\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: {'Content-Type':'application/json'},\r\n            body: JSON.stringify(values)\r\n        };\r\n\r\n        const res = await fetch('https://formspree.io/f/meqpdbqr', requestOptions);\r\n\r\n        console.log(res);\r\n\r\n        switch(res.status)\r\n        {\r\n            case 200:\r\n                alert(\"Thanks for the email. I will attempt to get back to you as soon as possible.\");\r\n                break;\r\n            default:\r\n                alert(\"Email could not be sent. Please try again later.\");\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    const handleEmail = (event) =>\r\n    {\r\n        event.preventDefault();\r\n        if(!ref_email.current.validateInput(email_regex))return;\r\n\r\n        // Send post request to email me\r\n        console.log(\"Sending Mail from [\" + email + \"] [\" + subject + \"]\");\r\n        sendMail({_replyto: email, _subject: subject, _message: message});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"email-form text-border\" onSubmit={handleEmail}>\r\n                <label>Email:</label>\r\n                {/*<input type=\"text\" value={email} onChange = {(event) => handleChange(event, setEmail)} required /> */}\r\n                <InputText ref = {ref_email} ref_state = {{value: email}} handleChange = {(event) => handleChange(event, setEmail)} required = {true} />\r\n                <label>Subject:</label><input type=\"text\" value={subject} onChange = {(event) => handleChange(event, setSubject)} required />\r\n                <textarea className= \"item-e\" value={message} onChange = {(event) => handleChange(event, setMessage)} required />\r\n                <input type=\"submit\" value=\"Send\" />\r\n            </form>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Page_Contact;","import {useState, useEffect, useCallback, useRef} from 'react';\r\nimport './projects.css';\r\n\r\nconst RepoElement = ({repo}) => {\r\n    const [repoBody, setRepoBody] = useState({open: true, size: 100});\r\n    const animation_interval = useRef();\r\n    \r\n    // Hold a reference to the state of the element\r\n    const state = useRef();\r\n    state.current = repoBody;\r\n\r\n    const setSize = useCallback((value) => {\r\n        // Keep new value within 0 - 100 range\r\n        let new_value = Math.max(0, Math.min(state.current.size + value, 100));\r\n\r\n        setRepoBody({open: repoBody.open, size: new_value});\r\n    }, [repoBody]);\r\n\r\n    const setOpenState = useCallback((state) => {\r\n        setRepoBody({open: state, size: repoBody.size});\r\n    }, [repoBody]);\r\n\r\n    const toggleRepoBody = () => {\r\n        setOpenState(!repoBody.open);\r\n    }\r\n\r\n    const alterRepoBody = useCallback(() =>\r\n    {\r\n        console.log('Update Size');\r\n        let speed = 5;\r\n        let repoBody = state.current;\r\n    \r\n        // Adjust speed to be postive/negative depending on whether we are opening or closing\r\n        if(!repoBody.open)speed = -speed;\r\n        setSize(speed);\r\n\r\n        // Animation is done if it reaches 0 or 100\r\n        if(repoBody.size + speed  <= 0 || repoBody.size + speed >= 100)\r\n            clearInterval(animation_interval.current);\r\n        \r\n\r\n    }, [setSize]);\r\n\r\n\r\n    useEffect(() => {\r\n        // Animate closing/opening project boxes\r\n        if(animation_interval.current)clearInterval(animation_interval.current);\r\n        animation_interval.current = setInterval(alterRepoBody, 20);\r\n    }, [repoBody.open]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"repo-name\" onClick={toggleRepoBody} >\r\n                <span>{repo.name}</span>\r\n            </div>\r\n\r\n            <div className=\"repo-body\" style={{'height': repoBody.size}}>\r\n                <div><span>{repo.git_url}</span><span>Run</span></div>\r\n                <span>{repo.description}</span>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\n// Repo List Component\r\n// Generate the github list of public projects\r\nconst RepoList = ({repos}) => {\r\n    \r\n    if(!repos || repos.length === 0) return (<p>No Repos were loaded...</p>);\r\n    return (\r\n        <ul>\r\n            <h2 className=\"list-head\">Public Github Repository</h2>\r\n            {repos.map((repo) => {\r\n                return(\r\n                    <li key ={repo.id} className=\"list\">\r\n                        <RepoElement repo = {repo}/>\r\n                    </li>\r\n                );\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\n// Return Component after it is loaded\r\nconst LoadRepo = (Component) => {\r\n    return ({isLoading, ...props}) => {\r\n        if(!isLoading) return <Component {...props} />\r\n        return (\r\n            <p>Fetching Repository Data...</p>\r\n        );\r\n    }\r\n}\r\n\r\nconst Page_Projects = () => {\r\n    const RepoLoading = LoadRepo(RepoList);\r\n    const [appState, setAppState] = useState({\r\n        loading: false,\r\n        repos: null\r\n    });\r\n\r\n    useEffect(() => {\r\n        console.log(\"Loading Github Repo using API\");\r\n        setAppState({loading: true});\r\n        const apiUrl = 'https://api.github.com/users/OmegaKev/repos';\r\n        fetch(apiUrl)\r\n        .then((res) => res.json())\r\n        .then((repos) => {setAppState({loading: false, repos: repos})});\r\n    }, [setAppState]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"repo-container\">\r\n                <RepoLoading isLoading={appState.loading} repos={appState.repos} />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Page_Projects;","import './App.css';\nimport {useState} from 'react';\nimport React from 'react';\nimport proImage from './assets/images/kh_picture.jpg';\nimport logo from './logo.svg'\nimport * as Toolbox from './ComponentToolbox.js';\nimport Page_About from './web_pages/About.js';\nimport Page_Resume from './web_pages/Resume.js';\nimport Page_Contact from './web_pages/Contact.js';\nimport Page_Projects from './web_pages/Projects.js';\n\nconst Button = ({handleClick, text}) => {\n  return (\n    <button className = \"left-side_button\" onClick = {handleClick}>{text}</button>\n  );\n}\n\nconst Page_UnderConstruction = () => {\n  return (\n    <div>\n      <span>Under Construction...</span>\n      <img className = 'logo' src = {logo} alt=\"React\" />\n    </div>\n  );\n}\n\n// MainPageContent as a class component to allow reference\nclass MainPageContent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.default = {page_state: 'Resume'};\n    this.state = this.default;\n    this.page = {'About Me': Page_About, \n                 'UnderConstruction': Page_UnderConstruction,\n                 'Resume': Page_Resume,\n                 'Projects' : Page_Projects,\n                 'Contact': Page_Contact};\n  }\n\n  changePage(page){\n    let new_page = this.default;\n\n    if(page in this.page)new_page = {page_state: page};\n    this.setState(new_page);\n  }\n\n  componentDidMount(){\n    console.log(\"MainPageContent: Mounted\");\n  }\n\n  componentWillUnmount(){\n    console.log(\"MainPageContent: Unmounted\");\n  }\n\n  render() {\n    const Page = this.page[this.state.page_state];\n\n    return (\n      <>\n        <Toolbox.Header text={this.state.page_state} />\n        <div className = \"content-area\">\n          <Page />\n        </div>\n      </>\n    );\n  }\n  \n}\n\nconst SideBySideLayout = () =>\n{\n  const mpRef = React.useRef();\n\n  return (\n    <div className = \"side-by-side_layout\">\n      <div className = \"left-column\">\n        <div>\n          <img src = {proImage} alt=\"Kevin Hall\" />\n        </div>\n        <div>\n          <Toolbox.Header text = \"Kevin Hall\" />\n        </div>\n        <div>\n          <Button handleClick = {() => mpRef.current.changePage('Resume')} text = \"Resume\" />\n          <Button handleClick = {() => mpRef.current.changePage('Projects')} text = \"Projects\" />\n          <Button handleClick = {() => mpRef.current.changePage('About Me')} text = \"About\" />\n          <Button handleClick = {() => mpRef.current.changePage('Contact')} text = \"Contact\" />\n        </div>\n      </div>\n      <div className = \"right-column\">\n        <MainPageContent ref={mpRef} />\n      </div>\n    </div>\n  );\n}\n\n\nconst App = () => {\n  return (\n    <SideBySideLayout />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}